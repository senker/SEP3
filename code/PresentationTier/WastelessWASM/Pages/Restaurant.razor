@page "/seller/{cvr:int}"
@using HttpClients.ClientInterfaces
@using Domain.Models@*
@inject SavedRestaurant _savedRestaurant;  *@
@inject IFoodPackService _foodPackService;

@inject ISellerService sellerService; 



<body>

<div id="coName"><h1>@company_name</h1></div>

<div id="topContainer">
    <div id="coPicture" style="background-image: url(@image)"></div>
    
    <p id="coDescription">@description</p>
</div>

@*<div id="coType">
    <div id="tag">@type</div>
    </div>*@
<button id="subscribeBtn">Subscribe</button>


<div id="bottomContainer">
    
    <div id="coInfo">
        <p>Rating: @rating </p>
        <p>@street_name <br/>@post_code <br/>@city</p>
    </div>
    
    <div id="mapContainer">
        <script suppress-error="BL9992">
                          async function foo(){
                              let obj;      
                              const res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=Borgergade+5,+8700+Horsens,+DK&key=AIzaSyDecST4-GSgcx5pAQbq0h2kbU55wlUfeuY`)
                              
                               obj = await res.json();
                                            
                                            console.log(obj)                    
                                            let lng = obj.results[0].geometry.location.lng;
                                            let lat = obj.results[0].geometry.location.lat;
                                            
                                            
                                            var map = new google.maps.Map(document.getElementById("mapContainer"), {
                                                              zoom: 15,
                                                              center: new google.maps.LatLng(lat, lng),
                                                              mapTypeId: google.maps.MapTypeId.ROADMAP
                                                            });
                                                            const infowindow = new google.maps.InfoWindow({
                                                              content: "Borgergade 7, 8700 Horsens",
                                                              ariaLabel: "Borgergade 7, 8700 Horsens",
                                                            });
                                                            let marker = new google.maps.Marker({
                                                              position: new google.maps.LatLng(55.86006434102756, 9.84509932092715),
                                                              map: map,
                                                              animation: google.maps.Animation.DROP
                                                            });
                                                            infowindow.open({
                                                              anchor: marker,
                                                              map
                                                            });   
                            }
                            foo();
                      </script>
    </div>

</div>

@*<div class="container" style="margin:  0; padding: 0">
                @for (var i = 0; i < numberOfFoodPacks; i++)
                {
                    var pack = foodPackModels.ElementAt(i);
                    <div class="row item">
                        <div class="col-md-4 item_photo">
                            <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQT-Y219QwLTdSpNaGlxL-jrqykM7J6g5HRug&usqp=CAU"/>
                        </div>
                        <div class="col-md-6 item_description">
                            <div class="row">
                                <div class="col-lg-12" style="text-align: center">
                                    <h2>Title: @pack.Title</h2>
                                </div>
                            </div>
                            <div class="row item" style="border-bottom:none">
                                <div class="col-lg-12">
                                    <div class="row item" style="border-bottom:none">
                                        <div class="col-lg-6">
                                            <p>Type: @pack.Type</p>
                                            <p>Prepared: @pack.IsPrepared</p>
                                        </div>
                                        <div class="col-lg-6">
                                            <p>Description</p>
                                            <p>@pack.Description</p>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="col-md-2 item_add">
                            <p style="float:left; align-items:  center">@pack.Price DKK</p>
                            <button class="add_btn" style="float:right">
                                <img src="img/basket.svg" alt="basket"/>
                                <p>ADD</p>
                            </button>
                        </div>
                    </div>
                }
            </div>*@








</body>



@code {
    private string first_name;
    private string last_name;
    private string street_name;
    private string city;
    private int post_code;
    private int phone_number;
    private string email;

    [Parameter]
    public int cvr { get; set; }

    private string company_name;
    private string description;
    private string type;
    private string website;
    private float rating;
    private string image;

    List<FoodPackModel> foodPackModels;
    private int numberOfFoodPacks;
    private int foodPackId;
    private string foodPackTitle;
    private string foodPackDescription;
    private string foodPackType;
    private bool foodPackIsPrepared;
    private double foodPackPrice;


    protected override async Task OnInitializedAsync()
    {
        var seller = await sellerService.GetSellerByCvr(cvr);
        
    //var seller = _savedRestaurant.GetSeller();
        first_name = seller.User.FirstName;
        last_name = seller.User.LastName;
        city = seller.User.Address.City;
        post_code = seller.User.Address.Postcode;
        street_name = seller.User.Address.Streetname;
        cvr = seller.Cvr;
        company_name = seller.CompanyName;
        description = seller.Description;
        type = seller.Type;
        website = seller.Website;
        rating = seller.Rating;
        image = seller.Image;


        foodPackModels = await _foodPackService.GetFoodPacksBySellerCvr(cvr);
        numberOfFoodPacks = foodPackModels.Count;
    }
}